akka {

  actor {
    provider = "akka.cluster.ClusterActorRefProvider"

    # Settings to allow message serialization.
    allow-java-serialization = on
    warn-about-java-serializer-usage = off
    serialize-messages = on
  }

  # Settings to allow remote connection.
  remote {
    artery {
      enabled = on
      transport = tcp
      canonical.hostname = "127.0.0.1"
      canonical.port = 6123
    }
  }

  # Settings for the Akka Cluster.
  cluster {
    min-nr-of-members = 1
    seed-nodes = [
      "akka://contact-tracing-system@127.0.0.1:6123"
    ]
  }

  # It is recommended to load the extension when the actor system is started by defining it in akka.extensions configuration property.
  # Otherwise it will be activated when first used and then it takes a while for it to be populated.
  akka.extensions = ["akka.cluster.pubsub.DistributedPubSub", "akka.contrib.pattern.ClusterReceptionistExtension"]

  # Settings for the DistributedPubSub extension.
  akka.cluster.pub-sub {
    # The routing logic to use for 'Send'
    # Possible values: random, round-robin, broadcast
    routing-logic = random

    # How often the DistributedPubSubMediator should send out gossip information
    gossip-interval = 1s

    # Removed entries are pruned after this duration
    removed-time-to-live = 120s

    # Maximum number of elements to transfer in one message when synchronizing the registries.
    # Next chunk will be transferred in next round of gossip.
    max-delta-elements = 3000

    # When a message is published to a topic with no subscribers send it to the dead letters.
    send-to-dead-letters-when-no-subscribers = on
  }
}